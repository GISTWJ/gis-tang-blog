import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as i,c,a as n,d as s,b as e,e as a}from"./app-C2XEPzjk.js";const l={},u=a(`<h1 id="cesium中的removeall" tabindex="-1"><a class="header-anchor" href="#cesium中的removeall"><span>Cesium中的removeAll</span></a></h1><p>在Cesium中，清除实体Entity的方法主要是在<code>Cesium.viewer.entities</code>实体集合中调用<code>remove()</code>、<code>removeById(id)</code>或<code>removeAll()</code></p><h3 id="一、remove-方法" tabindex="-1"><a class="header-anchor" href="#一、remove-方法"><span>一、remove()方法</span></a></h3><p>1、用法</p><p>从集合中删除一个实体。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code>viewer<span class="token punctuation">.</span>entities<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2、源码</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token class-name">EntityCollection</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">remove</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">entity</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 如果实体未定义，则返回 false</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">defined</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 调用 removeById 方法移除实体</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeById</span><span class="token punctuation">(</span>entity<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二、removebyid-id-方法" tabindex="-1"><a class="header-anchor" href="#二、removebyid-id-方法"><span>二、removeById(id)方法</span></a></h3><p>1、用法</p><p>移除指定ID的Entity</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>viewer<span class="token punctuation">.</span>entities<span class="token punctuation">.</span><span class="token function">removeById</span><span class="token punctuation">(</span>entityId<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2、源码</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token class-name">EntityCollection</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">removeById</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 如果 id 未定义，则返回 false</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">defined</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
    
  <span class="token comment">// 从实体集合中移除具有指定 id 的实体</span>
  <span class="token keyword">const</span> entities <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_entities<span class="token punctuation">;</span>
  <span class="token keyword">const</span> entity <span class="token operator">=</span> entities<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>_entities<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 从 _addedEntities 中移除实体，如果不存在则将实体添加到 _removedEntities</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>_addedEntities<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_removedEntities<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> entity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_changedEntities<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>_entities<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 移除监听实体定义更改的事件处理函数</span>
  entity<span class="token punctuation">.</span>definitionChanged<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span>
    <span class="token class-name">EntityCollection</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_onEntityDefinitionChanged<span class="token punctuation">,</span>
    <span class="token keyword">this</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 触发集合变更事件</span>
  <span class="token function">fireChangedEvent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三、removeall" tabindex="-1"><a class="header-anchor" href="#三、removeall"><span>三、removeAll()</span></a></h3><p>1、用法</p><p>移除所有实体</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>viewer<span class="token punctuation">.</span>entities<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2、源码</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token class-name">EntityCollection</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">removeAll</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 从 _entities 中移除所有实体</span>
  <span class="token comment">// 只包含在事件暂停前添加的项目和集合的内容。</span>
  <span class="token keyword">const</span> entities <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_entities<span class="token punctuation">;</span>
  <span class="token keyword">const</span> entitiesLength <span class="token operator">=</span> entities<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">const</span> array <span class="token operator">=</span> entities<span class="token punctuation">.</span>values<span class="token punctuation">;</span>

  <span class="token keyword">const</span> addedEntities <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_addedEntities<span class="token punctuation">;</span>
  <span class="token keyword">const</span> removed <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_removedEntities<span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> entitiesLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 对于每个实体，如果它是在添加实体集合中不存在的实体，则将其从集合中移除</span>
    <span class="token keyword">const</span> existingItem <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> existingItemId <span class="token operator">=</span> existingItem<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
    <span class="token keyword">const</span> addedItem <span class="token operator">=</span> addedEntities<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>existingItemId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">defined</span><span class="token punctuation">(</span>addedItem<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      existingItem<span class="token punctuation">.</span>definitionChanged<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span>
        <span class="token class-name">EntityCollection</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>_onEntityDefinitionChanged<span class="token punctuation">,</span>
        <span class="token keyword">this</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      removed<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>existingItemId<span class="token punctuation">,</span> existingItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 移除所有实体</span>
  entities<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  addedEntities<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>_changedEntities<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 触发集合变更事件</span>
  <span class="token function">fireChangedEvent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在Cesium中，图元<strong>Primitive</strong>是最基本单位，所以可以从webGL层面销毁<strong>Primitive</strong>，也可以从集合层面移除所有<strong>Primitive</strong>。</p><h3 id="四、destroy-primitive层面" tabindex="-1"><a class="header-anchor" href="#四、destroy-primitive层面"><span>四、destroy()---Primitive层面</span></a></h3><p>1、用法</p><p>销毁该对象持有的 WebGL 资源。销毁对象可以确定性地释放 WebGL 资源，而不是依赖垃圾收集器来销毁该对象。</p>`,24),r=n("code",null,"isDestroyed",-1),d={href:"https://cesium.com/learn/cesiumjs/ref-doc/DeveloperError.html",target:"_blank",rel:"noopener noreferrer"},k=n("code",null,"DeveloperError",-1),v=n("code",null,"undefined",-1),m=a(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>primitiveTest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Primitive</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
primitiveTest<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>2、源码</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token class-name">Primitive</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">destroy</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> i<span class="token punctuation">;</span>

  <span class="token comment">// 销毁渲染时的着色器程序和深度测试失败时的着色器程序</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>_sp <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_sp <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_sp<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>_spDepthFail <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_spDepthFail <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_spDepthFail<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 销毁顶点数组</span>
  <span class="token keyword">const</span> va <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_va<span class="token punctuation">;</span>
  length <span class="token operator">=</span> va<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    va<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>_va <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>

  <span class="token comment">// 销毁拾取 ID</span>
  <span class="token keyword">const</span> pickIds <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_pickIds<span class="token punctuation">;</span>
  length <span class="token operator">=</span> pickIds<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pickIds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>_pickIds <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>

  <span class="token comment">// 销毁批处理表和实例 ID</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>_batchTable <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_batchTable <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_batchTable<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>_instanceIds <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>_perInstanceAttributeCache <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>_attributeLocations <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>

  <span class="token comment">// 最后销毁 Primitive 对象本身</span>
  <span class="token keyword">return</span> <span class="token function">destroyObject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="五、remove" tabindex="-1"><a class="header-anchor" href="#五、remove"><span>五、remove()</span></a></h3><p>1、用法</p><p>从集合中删除一个<strong>Primitive</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> billboards <span class="token operator">=</span> scene<span class="token punctuation">.</span>primitives<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>BillboardCollection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span>primitives<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>billboards<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Returns true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>2、源码</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token class-name">PrimitiveCollection</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">remove</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">primitive</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 如果 PrimitiveCollection 包含指定的 primitive</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>primitive<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取 primitive 在 _primitives 数组中的索引</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_primitives<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>primitive<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 从 _primitives 数组中移除指定的 primitive</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>_primitives<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// 删除 primitive 在 _external._composites 中的引用</span>
      <span class="token keyword">delete</span> primitive<span class="token punctuation">.</span>_external<span class="token punctuation">.</span>_composites<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>_guid<span class="token punctuation">]</span><span class="token punctuation">;</span>

      <span class="token comment">// 如果设置了 destroyPrimitives 属性，销毁 primitive</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>destroyPrimitives<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        primitive<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// 触发 primitiveRemoved 事件</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>_primitiveRemoved<span class="token punctuation">.</span><span class="token function">raiseEvent</span><span class="token punctuation">(</span>primitive<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="六、removeall" tabindex="-1"><a class="header-anchor" href="#六、removeall"><span>六、removeAll()</span></a></h3><p>1、用法</p><p>移除集合中所有<strong>Primitive</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>scene<span class="token punctuation">.</span>primitives<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2、源码</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token class-name">PrimitiveCollection</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">removeAll</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> primitives <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_primitives<span class="token punctuation">;</span>
  <span class="token keyword">const</span> length <span class="token operator">=</span> primitives<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token comment">// 遍历所有的 Primitive 对象</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 删除 Primitive 对象在 _external._composites 中的引用</span>
    <span class="token keyword">delete</span> primitives<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>_external<span class="token punctuation">.</span>_composites<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>_guid<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// 如果设置了 destroyPrimitives 属性，销毁 Primitive 对象</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>destroyPrimitives<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      primitives<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 触发 primitiveRemoved 事件</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>_primitiveRemoved<span class="token punctuation">.</span><span class="token function">raiseEvent</span><span class="token punctuation">(</span>primitives<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 清空 _primitives 数组</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>_primitives <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="七、destroy-primitivecollection层面" tabindex="-1"><a class="header-anchor" href="#七、destroy-primitivecollection层面"><span>七、destroy()---PrimitiveCollection层面</span></a></h3><p>1、用法</p><p>销毁该集合中每个图元所持有的 WebGL 资源。显式销毁此集合可以确定性地释放 WebGL 资源，而不是依赖垃圾收集器来销毁此集合。</p><p>由于销毁集合会销毁所有包含的基元，因此只有在确定没有其他代码仍在使用任何包含的基元时才销毁集合。</p>`,19),b=n("code",null,"isDestroyed",-1),y={href:"https://cesium.com/learn/cesiumjs/ref-doc/DeveloperError.html",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"DeveloperError",-1),g=a(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>primitives <span class="token operator">=</span> primitives <span class="token operator">&amp;&amp;</span> primitives<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2、源码</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token class-name">PrimitiveCollection</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">destroy</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">destroyObject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：</p><p>不要轻易使用<strong>PrimitiveCollection</strong>的<code>removeAll()</code>与<code>destroy()</code>，因为Entity也是会解析转换为Primitive，不正确使用会导致移除其他单元的<strong>Primitive</strong>。</p></blockquote>`,4);function f(w,_){const t=o("ExternalLinkIcon");return i(),c("div",null,[u,n("p",null,[s("一旦对象被销毁，就不应再使用；调用除此之外的任何函数 "),r,s("都会导致"),n("a",d,[k,e(t)]),s("异常。因此，将返回值 ( "),v,s(") 分配给该对象，")]),m,n("p",null,[s("一旦该集合被销毁，则不应再使用；调用除此之外的任何函数 "),b,s("都会导致"),n("a",y,[h,e(t)]),s("异常。")]),g])}const C=p(l,[["render",f],["__file","050、Cesium中的removeAll().html.vue"]]),E=JSON.parse('{"path":"/posts/apple/050%E3%80%81Cesium%E4%B8%AD%E7%9A%84removeAll().html","title":"Cesium中的removeAll","lang":"zh-CN","frontmatter":{"description":"Cesium中的removeAll 在Cesium中，清除实体Entity的方法主要是在Cesium.viewer.entities实体集合中调用remove()、removeById(id)或removeAll() 一、remove()方法 1、用法 从集合中删除一个实体。 2、源码 二、removeById(id)方法 1、用法 移除指定ID的En...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/apple/050%E3%80%81Cesium%E4%B8%AD%E7%9A%84removeAll().html"}],["meta",{"property":"og:site_name","content":"歪脖祭司"}],["meta",{"property":"og:title","content":"Cesium中的removeAll"}],["meta",{"property":"og:description","content":"Cesium中的removeAll 在Cesium中，清除实体Entity的方法主要是在Cesium.viewer.entities实体集合中调用remove()、removeById(id)或removeAll() 一、remove()方法 1、用法 从集合中删除一个实体。 2、源码 二、removeById(id)方法 1、用法 移除指定ID的En..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-22T08:57:52.000Z"}],["meta",{"property":"article:author","content":"祭司唐"}],["meta",{"property":"article:modified_time","content":"2024-03-22T08:57:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Cesium中的removeAll\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-22T08:57:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"祭司唐\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":3,"title":"一、remove()方法","slug":"一、remove-方法","link":"#一、remove-方法","children":[]},{"level":3,"title":"二、removeById(id)方法","slug":"二、removebyid-id-方法","link":"#二、removebyid-id-方法","children":[]},{"level":3,"title":"三、removeAll()","slug":"三、removeall","link":"#三、removeall","children":[]},{"level":3,"title":"四、destroy()---Primitive层面","slug":"四、destroy-primitive层面","link":"#四、destroy-primitive层面","children":[]},{"level":3,"title":"五、remove()","slug":"五、remove","link":"#五、remove","children":[]},{"level":3,"title":"六、removeAll()","slug":"六、removeall","link":"#六、removeall","children":[]},{"level":3,"title":"七、destroy()---PrimitiveCollection层面","slug":"七、destroy-primitivecollection层面","link":"#七、destroy-primitivecollection层面","children":[]}],"git":{"createdTime":1711097872000,"updatedTime":1711097872000,"contributors":[{"name":"tangwenjian","email":"gistwj@163.com","commits":1}]},"readingTime":{"minutes":3.47,"words":1040},"filePathRelative":"posts/apple/050、Cesium中的removeAll().md","localizedDate":"2024年3月22日","excerpt":"\\n<p>在Cesium中，清除实体Entity的方法主要是在<code>Cesium.viewer.entities</code>实体集合中调用<code>remove()</code>、<code>removeById(id)</code>或<code>removeAll()</code></p>\\n<h3>一、remove()方法</h3>\\n<p>1、用法</p>\\n<p>从集合中删除一个实体。</p>\\n<div class=\\"language-typescript\\" data-ext=\\"ts\\" data-title=\\"ts\\"><pre class=\\"language-typescript\\"><code>viewer<span class=\\"token punctuation\\">.</span>entities<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">remove</span><span class=\\"token punctuation\\">(</span>entity<span class=\\"token punctuation\\">)</span>\\n</code></pre></div>","autoDesc":true}');export{C as comp,E as data};
